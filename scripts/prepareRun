#!/bin/bash
(number_of_processes=$(ps aux | pgrep hminus.exe | wc -l)
while [ $number_of_processes -eq 0 ]; do
	echo "No processes found yet, sleeping 10s."
	sleep 10
	number_of_processes=$(ps aux | pgrep hminus.exe | wc -l)
done

hminus_exists=1
while [ $hminus_exists -eq 1 ]; do
	number_of_processes=$(ps aux | pgrep hminus.exe | wc -l)
	if [ "$number_of_processes" -gt 0 ]; then
		time_elapsed=$(ps aux | grep hminus.exe | awk '{print $10}'| awk -F':' '{print $1}') #get the process run time
		time_elapsed=( $time_elapsed ) #transform string into an array
		unset time_elapsed[${#time_elapsed[@]}-1] #delete the last element of the array
		pid=$(ps aux | grep hminus.exe | awk '{print $2}') #repeat the same with process ID (PID)
		pid=( $pid )
		unset pid[${#pid[@]}-1]
		counter=0
	#	echo 'time: '"${time_elapsed[*]}"
	#	echo 'pid: '"${pid[*]}"
		echo "Found ""$number_of_processes"" processes"
		for time in ${time_elapsed[*]};
		do
			#echo "${time}"
			if [ $((time)) -gt 90 ]; then
				echo 'Killing process with time: '"${time}"' minutes, pid: '"${pid[$counter]}"'.'
				kill -9 "${pid[$counter]}"
			else
				if [ $time -eq 1 ]; then
					echo Found a process with PID "${pid[$counter]}" running "for" $time minute.
				else
					echo Found a process with PID "${pid[$counter]}" running "for" $time minutes.
				fi
			fi
			counter=$(( counter + 1 ))
		done
		sleep 5
	fi

	if [ "$number_of_processes" -eq 0 ]; then
		echo number of processes is 0, exiting.
		hminus_exists=0
	fi

done
) &
for file in atmospheres/*.atm;
do(
  folder_name=$(echo "$file" |awk -F'.' '{print $1}' | awk -F'/' '{print $2}')
  echo 'Creating' "$folder_name"
  cp -r hminus/template hminus/"$folder_name"
  cp "$file" hminus/"$folder_name"/FAL_VD
  echo 'lte' > hminus/"$folder_name"/fort.99
  cd hminus/"$folder_name"/ || exit
  ./hminus.exe
  a=$(cat fort.99)
  if [ 'exit' = "$a" ] ; then 
    echo 'hminus completed successfully'
    cd ../.. || exit
    if [ ! -d fioss ]; then
      echo 'fioss directory does not exist, creating'
      mkdir fioss
    fi
    echo "Running fioss_prepare for ""$folder_name"
    fioss_prepare "$folder_name"
    cd fioss/"$folder_name" || exit
	cat > job.sh <<- EOT
	#!/bin/bash
	#PBS -q atlasq
	#PBS -N nessy${folder_name}
	#PBS -M cernetic@mps.mpg.de
	#PBS -j oe
	#PBS -l nodes=3:ppn=48
	#PBS -l walltime=1:00:00
	EOT
	cat >> job.sh <<- "EOT"

	# initialize modules environment
	. $MODULESHOME/init/bash

	# load module(s)
	module load intel

	# change to submit dir
	cd $PBS_O_WORKDIR

	# number of processes
	NP=$(cat $PBS_NODEFILE | wc -l)

	# number of processes per node
	PPN=$(($NP/$(cat $PBS_NODEFILE|uniq|wc -l)))

	# set number of hardware contexts
	export PSM_SHAREDCONTEXTS_MAX=$(((($PPN+3))/4))

	# start your job
	export NODE_NUMBER=3
	export MAX_PROC=48
	fioss_do2_cluster 1010 10 8980 > nohup
	
	# unload module(s)
	module unload intel
	EOT
    qsub job.sh
  else
    echo "Problem with atmosphere" "$file"
    cd .. || exit
    mv "$folder_name" "$folder_name""failed"
    cd .. || exit
  fi
  ) &
done
wait
echo "All done, use 'qstat' to check the jobs queued on the cluster."

